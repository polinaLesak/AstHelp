version: '3.4'

services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        build: 
            context: ./rabbitmq_config
            dockerfile: Dockerfile
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq

    identity.microservice.db:
        container_name: identity.microservice.db
        image: postgres:17.0-alpine3.20
        restart: unless-stopped
        volumes:
            - identity.microservice.db:/var/lib/postgresql/data
    catalog.microservice.db:
        container_name: catalog.microservice.db
        image: postgres:17.0-alpine3.20
        restart: unless-stopped
        volumes:
            - catalog.microservice.db:/var/lib/postgresql/data
    cart.microservice.db:
        container_name: cart.microservice.db
        image: postgres:17.0-alpine3.20
        restart: unless-stopped
        volumes:
            - cart.microservice.db:/var/lib/postgresql/data
    orders.microservice.db:
        container_name: orders.microservice.db
        image: postgres:17.0-alpine3.20
        restart: unless-stopped
        volumes:
            - orders.microservice.db:/var/lib/postgresql/data
    # notification.microservice.db:
    #     container_name: notification.microservice.db
    #     image: postgres:17.0-alpine3.20
    #     restart: unless-stopped
    #     environment:
    #         POSTGRES_DB: "ast-help-notification"
    #         POSTGRES_USER: "postgres"
    #         POSTGRES_PASSWORD: "1234"
    #     volumes:
    #         - notification.microservice.db:/var/lib/postgresql/data
    #     ports:
    #         - "5404:5432"

    identity.microservice.api:
        image: identity.microservice.api
        container_name: identity.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Identity
            dockerfile: ./Identity.Microservice.API/Dockerfile
        depends_on:
            - identity.microservice.db
    catalog.microservice.api:
        image: catalog.microservice.api
        container_name: catalog.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Catalog
            dockerfile: ./Catalog.Microservice.API/Dockerfile
        depends_on:
            - catalog.microservice.db
    cart.microservice.api:
        image: cart.microservice.api
        container_name: cart.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Cart
            dockerfile: ./Cart.Microservice.API/Dockerfile
        depends_on:
            - cart.microservice.db
    orders.microservice.api:
        image: orders.microservice.api
        container_name: orders.microservice.api
        restart: unless-stopped
        build:
            context: ../../Microservice/Orders
            dockerfile: ./Orders.Microservice.API/Dockerfile
        depends_on:
            - orders.microservice.db
    # notification.microservice.api:
    #     image: notification.microservice.api
    #     container_name: notification.microservice.api
    #     restart: unless-stopped
    #     build:
    #         context: ../../Microservice/Notification
    #         dockerfile: ./Dockerfile
    #     environment:
    #         - ASPNETCORE_ENVIRONMENT=Development
    #         - ASPNETCORE_URLS=http://+:80
    #         - ConnectionStrings__DefaultConnection=Server=notification.microservice.db;Port=5432;Database=ast-help-notification;User Id=postgres;Password=1234
    #         - RABBITMQ_HOST=rabbitmq
    #         - RABBITMQ_PORT=5672
    #         - RABBITMQ_USER=user
    #         - RABBITMQ_PASSWORD=password
    #     ports:
    #         - "5104:80"
    #     depends_on:
    #         - notification.microservice.db

    asthelp.gateway:
        image: asthelp.gateway
        container_name: asthelp.gateway
        restart: unless-stopped
        build:
            context: ../../Gateway.WebApi
            dockerfile: ./Dockerfile
        depends_on:
            - identity.microservice.api

volumes:
    rabbitmq_data:
        name: rabbitmq_data   
        driver: local

    identity.microservice.db:
        name: identity.microservice.db 
    catalog.microservice.db:
        name: catalog.microservice.db 
    cart.microservice.db:
        name: cart.microservice.db   
    orders.microservice.db:
        name: orders.microservice.db  
    notification.microservice.db:
        name: notification.microservice.db            
