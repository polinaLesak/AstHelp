version: '3.4'

services:
    rabbitmq:
        ports:
            - "5672:5672"
            - "15672:15672"

    postgres.db:
        environment:
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "1234"
        ports:
            - "5400:5432"
        command: >
            bash -c "
                docker-entrypoint.sh postgres & 
                until pg_isready -h localhost -U postgres; do 
                    echo waiting for postgres; 
                    sleep 2; 
                done; 
                psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'ast_help_identity'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE ast_help_identity;' &&
                psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'ast_help_catalog'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE ast_help_catalog;' &&
                psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'ast_help_cart'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE ast_help_cart;' &&
                psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'ast_help_orders'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE ast_help_orders;' &&
                psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'ast_help_notification'\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE ast_help_notification;' &&
                wait"
                
    identity.microservice.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres.db;Port=5432;Database=ast_help_identity;User Id=postgres;Password=1234
            - RabbitMQ__HostName=rabbitmq
            - RabbitMQ__Port=5672
            - RabbitMQ__UserName=user
            - RabbitMQ__Password=password
            - RabbitMQ__QueueName=IdentityQueue
            - RabbitMQ__ExchangeName=IdentityExchange
        ports:
            - "5100:80"
    catalog.microservice.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres.db;Port=5432;Database=ast_help_catalog;User Id=postgres;Password=1234
            - RabbitMQ__HostName=rabbitmq
            - RabbitMQ__Port=5672
            - RabbitMQ__UserName=user
            - RabbitMQ__Password=password
            - RabbitMQ__QueueName=CatalogQueue
            - RabbitMQ__Exchange=CatalogExchange
        ports:
            - "5101:80"
    cart.microservice.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres.db;Port=5432;Database=ast_help_cart;User Id=postgres;Password=1234
            - RabbitMQ__HostName=rabbitmq
            - RabbitMQ__Port=5672
            - RabbitMQ__UserName=user
            - RabbitMQ__Password=password
            - IdentityService__BaseUrl=https://identity.microservice.api/
            - CatalogService__BaseUrl=https://catalog.microservice.api/
        ports:
            - "5102:80"
    orders.microservice.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres.db;Port=5432;Database=ast_help_orders;User Id=postgres;Password=1234
            - RabbitMQ__HostName=rabbitmq
            - RabbitMQ__Port=5672
            - RabbitMQ__UserName=user
            - RabbitMQ__Password=password
            - IdentityService__BaseUrl=https://identity.microservice.api/
            - CatalogService__BaseUrl=https://catalog.microservice.api/
            - CartService__BaseUrl=https://cart.microservice.api/
        ports:
            - "5103:80"
    notification.microservice.api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres.db;Port=5432;Database=ast_help_notification;User Id=postgres;Password=1234
            - RabbitMQ__HostName=rabbitmq
            - RabbitMQ__Port=5672
            - RabbitMQ__UserName=user
            - RabbitMQ__Password=password
            - RabbitMQ__QueueName=NotificationQueue
        ports:
            - "5104:80"

    asthelp.gateway:
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=http://+:80
        ports:
            - "5000:80"
    
    asthelp.webapp:
        environment:
            - REACT_APP_API_URL=http://localhost/backend/
        ports:
            - "3000:80"  

    nginx:
        ports:
            - "80:80"
            - "443:443"

    postgres.backup:
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=1234
            - PGPASSWORD=1234
        entrypoint: |
         bash -c '
            docker-entrypoint.sh postgres & 
                until pg_isready -h localhost -U postgres; do 
                    echo waiting for postgres; 
                    sleep 2; 
                done; 
            while true; do
                echo "Starting backup..."
                pg_dump -U "$$POSTGRES_USER" -h postgres.db -d ast_help_identity > /backup/ast_help_identity_$(date +%Y-%m-%d_%H-%M-%S).sql
                pg_dump -U "$$POSTGRES_USER" -h postgres.db -d ast_help_catalog > /backup/ast_help_catalog_$(date +%Y-%m-%d_%H-%M-%S).sql
                pg_dump -U "$$POSTGRES_USER" -h postgres.db -d ast_help_cart > /backup/ast_help_cart_$(date +%Y-%m-%d_%H-%M-%S).sql
                pg_dump -U "$$POSTGRES_USER" -h postgres.db -d ast_help_orders > /backup/ast_help_orders_$(date +%Y-%m-%d_%H-%M-%S).sql
                pg_dump -U "$$POSTGRES_USER" -h postgres.db -d ast_help_notification > /backup/ast_help_notification_$(date +%Y-%m-%d_%H-%M-%S).sql
                echo "Backup complete.  Sleeping..."
                sleep 3600
            done
          '
