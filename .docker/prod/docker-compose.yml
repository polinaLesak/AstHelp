version: '3.4'

services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        build: 
            context: ./rabbitmq_config
            dockerfile: ./Dockerfile
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq

    postgres.db:
        container_name: postgres.db
        image: postgres:17.0-alpine3.20
        volumes:
            - postgres.db:/var/lib/postgresql/data
            
    identity.microservice.api:
        image: identity.microservice.api
        container_name: identity.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Identity
            dockerfile: ./Identity.Microservice.API/Dockerfile
        depends_on:
            - postgres.db
            - rabbitmq
    catalog.microservice.api:
        image: catalog.microservice.api
        container_name: catalog.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Catalog
            dockerfile: ./Catalog.Microservice.API/Dockerfile
        depends_on:
            - postgres.db
            - rabbitmq
    cart.microservice.api:
        image: cart.microservice.api
        container_name: cart.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Cart
            dockerfile: ./Cart.Microservice.API/Dockerfile
        depends_on:
            - postgres.db
            - rabbitmq
    orders.microservice.api:
        image: orders.microservice.api
        container_name: orders.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Orders
            dockerfile: ./Orders.Microservice.API/Dockerfile
        depends_on:
            - postgres.db
            - rabbitmq
    notification.microservice.api:
        image: notification.microservice.api
        container_name: notification.microservice.api
        restart: on-failure
        build:
            context: ../../Microservice/Notification
            dockerfile: ./Notification.Microservice.API/Dockerfile
        depends_on:
            - postgres.db
            - rabbitmq

    asthelp.gateway:
        image: asthelp.gateway
        container_name: asthelp.gateway
        restart: on-failure
        build:
            context: ../../Gateway.WebApi
            dockerfile: ./Dockerfile
        volumes:
            - ./certs:/app/certs
        depends_on:
            - identity.microservice.api
            - catalog.microservice.api
            - cart.microservice.api
            - orders.microservice.api
            - notification.microservice.api

    asthelp.webapp:
        image: asthelp.webapp
        container_name: asthelp.webapp
        build:
            context: ../../AstHelp.Webapp
            dockerfile: ./Dockerfile
        depends_on:
            - asthelp.gateway

    nginx:
        container_name: nginx
        build:
            context: ./nginx_config
            dockerfile: ./Dockerfile
        depends_on:
            - asthelp.gateway
            - asthelp.webapp

    postgres.backup:
        image: postgres:17.0-alpine3.20
        volumes:
          - ./backup:/backup
        depends_on:
          - asthelp.webapp
        restart: always

volumes:
    rabbitmq_data:
        name: rabbitmq_data   
        driver: local

    postgres.db:
        name: postgres.db         
